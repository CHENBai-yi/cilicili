<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.cilicili.frontend.course.mapper.CoursesMapper">
    
    <resultMap type="site.cilicili.frontend.course.domain.pojo.CoursesEntity" id="CoursesMap">
        <result property="courseId" column="course_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="teacher" column="teacher" jdbcType="VARCHAR"/>
        <result property="kind" column="kind" jdbcType="VARCHAR"/>
        <result property="subject" column="subject" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="poster" column="poster" jdbcType="VARCHAR"/>
        <result property="tag" column="tag" jdbcType="VARCHAR"/>
    </resultMap>
    
    <!--查询单个-->
    <select id="queryById" resultMap="CoursesMap">
        select course_id,
               name,
               teacher,
               kind,
               subject,
               price,
               description,
               poster,
               tag
        from courses
        where course_id = #{courseId}
    </select>
    
    <!--查询指定行数据-->
    <select id="queryAll" resultMap="CoursesMap">
        select
        course_id, name, teacher, kind, subject, price, description, poster, tag,status
        from courses
        <where>
            <if test="status != null and status!=''">
                and status = #{status}
            </if>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="teacher != null and teacher != ''">
                and teacher = #{teacher}
            </if>
            <if test="kind != null and kind != ''">
                and kind = #{kind}
            </if>
            <if test="subject != null and subject != ''">
                and subject = #{subject}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="poster != null and poster != ''">
                and poster = #{poster}
            </if>
            <if test="tag != null and tag != ''">
                and tag = #{tag}
            </if>
        </where>
    </select>
    
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(*)
        from courses
        <where>
            <if test="courseId != null">
                and course_id = #{courseId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="teacher != null and teacher != ''">
                and teacher = #{teacher}
            </if>
            <if test="kind != null and kind != ''">
                and kind = #{kind}
            </if>
            <if test="subject != null and subject != ''">
                and subject = #{subject}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="poster != null and poster != ''">
                and poster = #{poster}
            </if>
            <if test="tag != null and tag != ''">
                and tag = #{tag}
            </if>
        </where>
    </select>
    
    <resultMap type="site.cilicili.frontend.course.domain.dto.GetCourseInfoResponse$CourseList"
               id="GetCourseInfoResponse">
        <result property="id" column="course_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="author" column="teacher" jdbcType="VARCHAR"/>
        <result property="img" column="poster" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="kind" column="kind" jdbcType="VARCHAR"/>
        <result property="subject" column="subject" jdbcType="VARCHAR"/>
        <result property="date" column="created_at" jdbcType="DATE"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="desc" column="description" jdbcType="VARCHAR"/>
        <result property="protein" column="total_time" jdbcType="VARCHAR"/>
        <result property="reason" column="reason" jdbcType="VARCHAR"/>
        <association property="carbs" column="course_id" select="getCarbs"/>
    </resultMap>
    
    <select id="selectCourseByParam" resultMap="GetCourseInfoResponse">
        select *
        from courses
        <where>
            <if test="status != null and status!=''">
                and status = #{status}
            </if>
        </where>
        <if test="desc">
            order by ${sortBy} desc
        </if>
        <if test="page>0 and pageSize>0">
            <bind name="cur" value="(page*pageSize)-pageSize"/>
            limit #{cur},#{pageSize}
        </if>
    </select>
    <select id="getCarbs" resultType="integer">
        select count(*)
        from catalogs
        where course_id = #{course_id}
    </select>
    
    <resultMap type="site.cilicili.frontend.course.domain.dto.CetCoursesCountResponse" id="CetCoursesCountResponse">
        <association property="total" javaType="integer" select="getTotal" column="total"/>
        <association property="off" javaType="integer" select="getOff" column="off"/>
        <association property="pass" javaType="integer" select="getPass" column="pass"/>
        <association property="on" javaType="integer" select="getOn" column="on"/>
    </resultMap>
    
    <select id="getCoursesCount" resultMap="CetCoursesCountResponse">
        select 'value' total,
               'value' pass,
               'value' `on`,
               'value' off
        from `cili-quasar-user`.courses
        LIMIT 1
    </select>
    <select id="getTotal" resultType="integer">
        select COUNT(*)
        from `cili-quasar-user`.courses
    </select>
    <select id="getOff" resultType="integer">
        select COUNT(*)
        from `cili-quasar-user`.courses
        where courses.status = 'onOffPass_off'

    </select>
    <select id="getPass" resultType="integer">
        select COUNT(*)
        from `cili-quasar-user`.courses
        where courses.status = 'onOffPass_pass'

    </select>
    <select id="getOn" resultType="integer">
        select COUNT(*)
        from `cili-quasar-user`.courses
        where courses.status = 'onOffPass_on'
    </select>
    
    
    <resultMap type="site.cilicili.frontend.course.domain.dto.GetChildrenBarResponse"
               id="GetChildrenBarResponse">
        <result property="id" column="course_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="url" column="poster" jdbcType="VARCHAR"/>
        <collection property="catalog" column="course_id" select="findRelativeCatalog"/>
    </resultMap>
    
    <resultMap type="site.cilicili.frontend.course.domain.dto.GetChildrenBarResponse$Catalog"
               id="Catalog">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="catalogId" column="catalog_id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="desc" column="description" jdbcType="VARCHAR"/>
        <collection property="bar" column="catalog_id" select="findRelativeBar"/>
    </resultMap>
    <resultMap type="site.cilicili.frontend.course.domain.dto.GetChildrenBarResponse$Bar"
               id="Bar">
        <result property="barId" column="bar_id" jdbcType="INTEGER"/>
        <result property="catalog" column="catalog_id" jdbcType="INTEGER"/>
        <result property="pId" column="parent_bar_id" jdbcType="INTEGER"/>
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="desc" column="description" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
    </resultMap>
    
    <select id="getChildrenBar" resultMap="GetChildrenBarResponse">
        select course_id, name, poster
        from courses
        where course_id = #{id}
    </select>
    <select id="findRelativeCatalog" resultMap="Catalog">
        select id, title, description, catalog_id
        from catalogs
        where course_id = #{course_id}
    </select>
    <select id="findRelativeBar" resultMap="Bar">
        select parent_bar_id, catalog_id, id, title, bar_id, description, url
        from bars
        where catalog_id = #{catalog_id}
    </select>
    
    <!--新增所有列-->
    <insert id="insert" keyProperty="courseId" useGeneratedKeys="true">
        insert into courses(name, teacher, kind, subject, price, description, poster, tag)
        values (#{name}, #{teacher}, #{kind}, #{subject}, #{price}, #{description}, #{poster}, #{tag})
    </insert>
    
    <insert id="insertBatch" keyProperty="courseId" useGeneratedKeys="true">
        insert into courses(name, teacher, kind, subject, price, description, poster, tag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.teacher}, #{entity.kind}, #{entity.subject}, #{entity.price},
            #{entity.description}, #{entity.poster}, #{entity.tag})
        </foreach>
    </insert>
    
    <insert id="insertOrUpdateBatch" keyProperty="courseId" useGeneratedKeys="true">
        insert into courses(name, teacher, kind, subject, price, description, poster, tag)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.teacher}, #{entity.kind}, #{entity.subject}, #{entity.price},
            #{entity.description}, #{entity.poster}, #{entity.tag})
        </foreach>
        on duplicate key update
        name = values(name),
        teacher = values(teacher),
        kind = values(kind),
        subject = values(subject),
        price = values(price),
        description = values(description),
        poster = values(poster),
        tag = values(tag)
    </insert>
    
    <!--通过主键修改数据-->
    <update id="update">
        update courses
        <set>
            <if test="status != null and status!=''">
                status = #{status},
            </if>
            <if test="reason != null and reason!=''">
                reason = #{reason},
            </if>
            <if test="logicalDelete != null">
                logical_delete = #{logicalDelete},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="teacher != null and teacher != ''">
                teacher = #{teacher},
            </if>
            <if test="kind != null and kind != ''">
                kind = #{kind},
            </if>
            <if test="subject != null and subject != ''">
                subject = #{subject},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="poster != null and poster != ''">
                poster = #{poster},
            </if>
            <if test="tag != null and tag != ''">
                tag = #{tag},
            </if>
        </set>
        where course_id = #{courseId}
    </update>
    <update id="logicalDeleteCourseInfoById">
        update courses
        <set>
            logical_delete=0
        </set>
        where course_id = #{courseId}
    </update>
    <update id="updateCourse">
    
    </update>
    
    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from courses
        where course_id = #{courseId}
    </delete>


</mapper>


