<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.cilicili.frontend.memberShip.mapper.MemberShipMapper">
    
    <resultMap type="site.cilicili.frontend.memberShip.domain.pojo.MemberShipEntity" id="MemberShipMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="logicalDelete" column="logical_delete" jdbcType="INTEGER"/>
    </resultMap>
    
    <!--查询单个-->
    <select id="queryById" resultMap="MemberShipMap">
        select id,
               user_id,
               created_at,
               created_by,
               updated_at,
               updated_by,
               username,
               email,
               status,
               logical_delete
        from member_ship
        where id = #{id}
    </select>
    
    <!--查询指定行数据-->
    <select id="queryAll" resultMap="MemberShipMap">
        select
        id, user_id, created_at, created_by, updated_at, updated_by, username, email, status, logical_delete
        from member_ship
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="logicalDelete != null">
                and logical_delete = #{logicalDelete}
            </if>
        </where>
    </select>
    
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(*)
        from member_ship
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="logicalDelete != null">
                and logical_delete = #{logicalDelete}
            </if>
        </where>
    </select>
    <select id="queryByIdOrUsername" resultMap="MemberShipMap">
        SELECT *FROM member_ship
        <where>
            <if test="id!=null and id !=''">
                user_id=#{id}
            </if>
            <if test="username!=null and username !=''">
                and username=#{username}
            </if>
        </where>
    </select>
    <select id="getMemberPosition" resultType="java.lang.Integer">
        select count(*)
        from member_ship a
        where exists(select id from member_ship b where user_id = #{id} and b.id > a.id)
    </select>
    
    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into member_ship(user_id, created_at, created_by, updated_at, updated_by, username, email, status,
                                logical_delete, trade_no, product)
        values (#{userId}, #{createdAt}, #{createdBy}, #{updatedAt}, #{updatedBy}, #{username}, #{email}, #{status},
                #{logicalDelete}, #{tradeNo}, #{product})
    </insert>
    
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into member_ship(user_id, created_at, created_by, updated_at, updated_by, username, email, status,
        logical_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.createdAt}, #{entity.createdBy}, #{entity.updatedAt}, #{entity.updatedBy},
            #{entity.username}, #{entity.email}, #{entity.status}, #{entity.logicalDelete})
        </foreach>
    </insert>
    
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into member_ship(user_id, created_at, created_by, updated_at, updated_by, username, email, status,
        logical_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.createdAt}, #{entity.createdBy}, #{entity.updatedAt}, #{entity.updatedBy},
            #{entity.username}, #{entity.email}, #{entity.status}, #{entity.logicalDelete})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        created_at = values(created_at),
        created_by = values(created_by),
        updated_at = values(updated_at),
        updated_by = values(updated_by),
        username = values(username),
        email = values(email),
        status = values(status),
        logical_delete = values(logical_delete)
    </insert>
    
    <!--通过主键修改数据-->
    <update id="update">
        update member_ship
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="logicalDelete != null">
                logical_delete = #{logicalDelete},
            </if>
        </set>
        where id = #{id}
    </update>
    
    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from member_ship
        where id = #{id}
    </delete>


</mapper>


