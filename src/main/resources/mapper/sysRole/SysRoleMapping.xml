<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.cilicili.backend.role.mapper.SysRoleMapper">
    
    <resultMap type="site.cilicili.backend.role.domain.pojo.SysRoleEntity" id="SysRoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
        <result property="logicalDelete" column="logical_delete" jdbcType="BOOLEAN"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="stable" column="stable" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="memo" column="memo" jdbcType="VARCHAR"/>
        <result property="roleCode" column="role_code" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="deptDataPermissionType" column="dept_data_permission_type" jdbcType="VARCHAR"/>
        <result property="deptDataPermissionCustom" column="dept_data_permission_custom" jdbcType="VARCHAR"/>
        <result property="defaultPage" column="default_page" jdbcType="VARCHAR"/>
    </resultMap>
    
    <resultMap type="site.cilicili.backend.role.domain.dto.SysRoleDto$DefaultPageMenu" id="defaultPageMenu">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="stable" column="stable" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="memo" column="memo" jdbcType="VARCHAR"/>
        <result property="parentCode" column="parent_code" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="path" column="path" jdbcType="VARCHAR"/>
        <result property="component" column="component" jdbcType="VARCHAR"/>
        <result property="redirect" column="redirect" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="icon" column="icon" jdbcType="VARCHAR"/>
        <result property="hidden" column="hidden" jdbcType="VARCHAR"/>
        <result property="keepAlive" column="keep_alive" jdbcType="VARCHAR"/>
        <result property="isLink" column="is_link" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap type="site.cilicili.backend.role.domain.dto.SysRoleDto$User" id="user">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="stable" column="stable" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="memo" column="memo" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <association property="createdByUser" column="created_by=created_by" select="findCreatedByUser"/>
        <association property="updatedByUser" column="updated_by=updated_by" select="findUpdatedByUser"/>
        <association property="dept" column="username=username" select="findSysDeptEntity"/>
        <association property="role" column="username=username" select="findSysRoleEntity"/>
    </resultMap>
    <select id="findSysDeptEntity" resultMap="site.cilicili.backend.dept.mapper.SysDeptMapper.SysDeptDto">
        select sys_dept.*
        from sys_dept,
             (select sys_dept_dept_code from sys_dept_user where sys_user_username = #{username}) as b
        where dept_code = b.sys_dept_dept_code;
    </select>
    <select id="findSysRoleEntity" resultMap="RoleList">
        select sys_role.*
        from sys_role,
             (select sys_role_role_code from sys_user_role where sys_user_username = #{username}) as b
        where sys_role.logical_delete > 0
          and sys_role.role_code = b.sys_role_role_code;
    </select>
    <resultMap type="site.cilicili.backend.role.domain.dto.SysRoleDto$Records" id="RoleList">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="stable" column="stable" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="memo" column="memo" jdbcType="VARCHAR"/>
        <result property="roleCode" column="role_code" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="deptDataPermissionType" column="dept_data_permission_type" jdbcType="VARCHAR"/>
        <result property="deptDataPermissionCustom" column="dept_data_permission_custom" jdbcType="VARCHAR"/>
        <result property="defaultPage" column="default_page" jdbcType="VARCHAR"/>
        <result property="user" column="user" jdbcType="VARCHAR"/>
        <result property="menu" column="menu" jdbcType="VARCHAR"/>
        <result property="button" column="button" jdbcType="VARCHAR"/>
        <association property="defaultPageMenu" column="default_page=default_page" select="findDefaultPage"/>
    </resultMap>
    <resultMap type="site.cilicili.backend.role.domain.dto.SysRoleDto$Records" id="RoleListById">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="stable" column="stable" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="memo" column="memo" jdbcType="VARCHAR"/>
        <result property="roleCode" column="role_code" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="deptDataPermissionType" column="dept_data_permission_type" jdbcType="VARCHAR"/>
        <result property="deptDataPermissionCustom" column="dept_data_permission_custom" jdbcType="VARCHAR"/>
        <result property="defaultPage" column="default_page" jdbcType="VARCHAR"/>
        <result property="user" column="user" jdbcType="VARCHAR"/>
        <result property="menu" column="menu" jdbcType="VARCHAR"/>
        <result property="button" column="button" jdbcType="VARCHAR"/>
        <association property="defaultPageMenu" column="default_page=default_page" select="findDefaultPage"/>
        <association property="createdByUser" column="created_by=created_by" select="findCreatedByUser"/>
        <association property="updatedByUser" column="updated_by=updated_by" select="findUpdatedByUser"/>
    </resultMap>
    <!--查询SysRoleDto-->
    <select id="queryRoleListByParam" resultMap="RoleList"
            parameterType="site.cilicili.backend.role.domain.dto.RoleListQueryParam">
        select * from sys_role
        <where>
            <trim prefix="(" suffix=")" prefixOverrides="or">
                <if test="roleCode!=null and roleCode!=''">
                    <bind name="rcl" value="'%'+roleCode+'%'"/>
                    role_code like #{rcl}
                </if>
                <if test="roleName!=null and roleName!=''">
                    <bind name="rl" value="'%'+roleName+'%'"/>
                    or role_name like #{rl}
                </if>
            </trim>
            <if test="id!=null">
                and id=#{id}
            </if>
            and logical_delete>0
        </where>
        <if test="desc">
            order by #{sortBy} desc
        </if>
        <if test="page>0 and pageSize>0">
            <bind name="cur" value="(page*pageSize)-pageSize"/>
            limit #{cur},#{pageSize}
        </if>
        ;
    </select>
    <select id="findDefaultPage" resultMap="defaultPageMenu">
        select *
        from sys_menu
        where name = #{default_page};
    </select>
    
    <select id="findCreatedByUser" resultMap="user">
        select *
        from sys_user
        where username = #{created_by};
    </select>
    <select id="findUpdatedByUser" resultMap="user">
        select *
        from sys_user
        where username = #{updated_by};
    </select>
    
    <!--查询单个-->
    <select id="queryById" resultMap="SysRoleMap">
        select id,
               created_at,
               created_by,
               updated_at,
               updated_by,
               deleted_at,
               sort,
               stable,
               status,
               memo,
               role_code,
               role_name,
               dept_data_permission_type,
               dept_data_permission_custom,
               default_page
        from sys_role
        where sys_role.logical_delete > 0
          and id = #{id}
    </select>
    
    <!--查询指定行数据-->
    <select id="queryAll" resultMap="SysRoleMap">
        select
        id, created_at, created_by, updated_at, updated_by, deleted_at, sort, stable, status, memo, role_code,
        role_name, dept_data_permission_type, dept_data_permission_custom, default_page
        from sys_role
        <where>
            sys_role.logical_delete>0
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="deletedAt != null">
                and deleted_at = #{deletedAt}
            </if>
            <if test="sort != null">
                and sort = #{sort}
            </if>
            <if test="stable != null and stable != ''">
                and stable = #{stable}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="memo != null and memo != ''">
                and memo = #{memo}
            </if>
            <if test="roleCode != null and roleCode != ''">
                and role_code = #{roleCode}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="deptDataPermissionType != null and deptDataPermissionType != ''">
                and dept_data_permission_type = #{deptDataPermissionType}
            </if>
            <if test="deptDataPermissionCustom != null and deptDataPermissionCustom != ''">
                and dept_data_permission_custom = #{deptDataPermissionCustom}
            </if>
            <if test="defaultPage != null and defaultPage != ''">
                and default_page = #{defaultPage}
            </if>
        </where>
    </select>
    
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(*)
        from sys_role
        <where>
            sys_role.logical_delete>0
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="deletedAt != null">
                and deleted_at = #{deletedAt}
            </if>
            <if test="sort != null">
                and sort = #{sort}
            </if>
            <if test="stable != null and stable != ''">
                and stable = #{stable}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="memo != null and memo != ''">
                and memo = #{memo}
            </if>
            <if test="roleCode != null and roleCode != ''">
                and role_code = #{roleCode}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="deptDataPermissionType != null and deptDataPermissionType != ''">
                and dept_data_permission_type = #{deptDataPermissionType}
            </if>
            <if test="deptDataPermissionCustom != null and deptDataPermissionCustom != ''">
                and dept_data_permission_custom = #{deptDataPermissionCustom}
            </if>
            <if test="defaultPage != null and defaultPage != ''">
                and default_page = #{defaultPage}
            </if>
        </where>
    </select>
    <select id="queryRoleListById" resultMap="RoleListById">
        select *
        from sys_role
        where sys_role.logical_delete > 0
          and id = #{id};
    </select>
    <select id="queryUserByRole" resultMap="user">
        select sys_user.* from sys_user,(select sys_user_username from sys_user_role where
        sys_role_role_code=#{roleCode}) as b where username=b.sys_user_username
        <if test="desc">
            order by #{sortBy} desc
        </if>
        <if test="page>0 and pageSize>0">
            <bind name="cur" value="(page*pageSize)-pageSize"/>
            limit #{cur},#{pageSize}
        </if>
        ;
    </select>
    
    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sys_role(created_at, created_by, updated_at, updated_by, deleted_at, sort, stable, status, memo,
                             role_code, role_name, dept_data_permission_type, dept_data_permission_custom, default_page)
        values (#{createdAt}, #{createdBy}, #{updatedAt}, #{updatedBy}, #{deletedAt}, #{sort}, #{stable}, #{status},
                #{memo}, #{roleCode}, #{roleName}, #{deptDataPermissionType}, #{deptDataPermissionCustom},
                #{defaultPage})
    </insert>
    
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_role(created_at, created_by, updated_at, updated_by, deleted_at, sort, stable, status, memo,
        role_code, role_name, dept_data_permission_type, dept_data_permission_custom, default_page)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createdAt}, #{entity.createdBy}, #{entity.updatedAt}, #{entity.updatedBy}, #{entity.deletedAt},
            #{entity.sort}, #{entity.stable}, #{entity.status}, #{entity.memo}, #{entity.roleCode}, #{entity.roleName},
            #{entity.deptDataPermissionType}, #{entity.deptDataPermissionCustom}, #{entity.defaultPage})
        </foreach>
    </insert>
    
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sys_role(created_at, created_by, updated_at, updated_by, deleted_at, sort, stable, status, memo,
        role_code, role_name, dept_data_permission_type, dept_data_permission_custom, default_page)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createdAt}, #{entity.createdBy}, #{entity.updatedAt}, #{entity.updatedBy}, #{entity.deletedAt},
            #{entity.sort}, #{entity.stable}, #{entity.status}, #{entity.memo}, #{entity.roleCode}, #{entity.roleName},
            #{entity.deptDataPermissionType}, #{entity.deptDataPermissionCustom}, #{entity.defaultPage})
        </foreach>
        on duplicate key update
        created_at = values(created_at),
        created_by = values(created_by),
        updated_at = values(updated_at),
        updated_by = values(updated_by),
        deleted_at = values(deleted_at),
        sort = values(sort),
        stable = values(stable),
        status = values(status),
        memo = values(memo),
        role_code = values(role_code),
        role_name = values(role_name),
        dept_data_permission_type = values(dept_data_permission_type),
        dept_data_permission_custom = values(dept_data_permission_custom),
        default_page = values(default_page)
    </insert>
    
    <!--通过主键修改数据-->
    <update id="update">
        update sys_role
        <set>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy},
            </if>
            <if test="deletedAt != null">
                deleted_at = #{deletedAt},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="stable != null and stable != ''">
                stable = #{stable},
            </if>
            <if test="status != null and status != ''">
                status = #{status},
            </if>
            <if test="memo != null and memo != ''">
                memo = #{memo},
            </if>
            <if test="roleCode != null and roleCode != ''">
                role_code = #{roleCode},
            </if>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="deptDataPermissionType != null and deptDataPermissionType != ''">
                dept_data_permission_type = #{deptDataPermissionType},
            </if>
            <if test="deptDataPermissionCustom != null and deptDataPermissionCustom != ''">
                dept_data_permission_custom = #{deptDataPermissionCustom},
            </if>
            <if test="defaultPage != null and defaultPage != ''">
                default_page = #{defaultPage},
            </if>
            <if test="logicalDelete ==0 or logicalDelete==1">
                logical_delete = #{logicalDelete},
            </if>
        </set>
        where logical_delete > 0 and id = #{id}
    </update>
    
    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_role
        where logical_delete > 0
          and id = #{id};
    </delete>


</mapper>


